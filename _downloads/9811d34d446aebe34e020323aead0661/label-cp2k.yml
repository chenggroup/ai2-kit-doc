# This is the configuration file for label stage with CP2K.
# The configuration contains 2 parts: executor context and workflow params.

executors:
  # This should correspond to the executor name in executor.yml
  hpc-cluster01:
    context:
      label:
        cp2k:
          # The template used to generate submit script.
          script_template:
            # Specify the header of the submit script,
            # Should be configured according to your system.
            header: |
              #SBATCH -N 1
              #SBATCH --ntasks-per-node=16
              #SBATCH --job-name=cp2k
              #SBATCH --partition=cpu

            # Specify the setup commands of the submit script,
            # Should be configured according to your system.
            setup: |
              set -e
              module load intel/17.5.239 mpi/intel/2017.5.239
              module load gcc/5.5.0
              module load cp2k/7.1
              set +e

          # Optional, specify the command to run deepmd-kit, default: cp2k.
          cp2k_cmd: cp2k.popt

          # Optional, specify the number of concurrent tasks, default: 0 (no limit)
          concurrency:

workflow:
  label:
    cp2k:
      # Optional, limit the number of structures to label, default: 0 (no limit)
      limit: 10

      # Ignore the error of the label, default: false
      ignore_error: true

      # The input template for CP2K.
      # You can put the content of the input template here,
      # or you can put the input template in a file, for example, cp2k-input.inp,
      # and then you can load the input template from the file by
      #
      # input_template: !load_text cp2k-input.inp
      #
      # Here we put the input template directly in the configuration file.
      # For more information about the input template, please refer to CP2K documentation.
      #
      # The workflow will generate a file named coord_n_cell.inc in the working directory,
      # You should use the @include directive to include the structure and cell information.
      #
      # @include coord_n_cell.inc
      #
      # Please do not specify them here.
      input_template: |
        &GLOBAL
           PROJECT  DPGEN
        &END
        &FORCE_EVAL
           &DFT
              BASIS_SET_FILE_NAME  /path/to/cp2k/BASIS/BASIS_MOLOPT
              POTENTIAL_FILE_NAME  /path/to/cp2k/POTENTIAL/GTH_POTENTIALS
              CHARGE  0
              UKS  F
              &MGRID
                 CUTOFF  600
                 REL_CUTOFF  60
                 NGRIDS  4
              &END
              &QS
                 EPS_DEFAULT  1.0E-12
              &END
              &SCF
                 SCF_GUESS  RESTART
                 EPS_SCF  3.0E-7
                 MAX_SCF  50
                 &OUTER_SCF
                    EPS_SCF  3.0E-7
                    MAX_SCF  10
                 &END
                 &OT
                    MINIMIZER  DIIS
                    PRECONDITIONER  FULL_SINGLE_INVERSE
                    ENERGY_GAP  0.1
                 &END
              &END
              &XC
                 &XC_FUNCTIONAL PBE
                 &END
                 &vdW_POTENTIAL
                    DISPERSION_FUNCTIONAL  PAIR_POTENTIAL
                    &PAIR_POTENTIAL
                       TYPE  DFTD3
                       PARAMETER_FILE_NAME  dftd3.dat
                       REFERENCE_FUNCTIONAL  PBE
                    &END
                 &END
              &END
           &END
           &SUBSYS
              @include coord_n_cell.inc
              &KIND O
                 BASIS_SET  DZVP-MOLOPT-SR-GTH
                 POTENTIAL  GTH-PBE-q6
              &END
              &KIND H
                 BASIS_SET  DZVP-MOLOPT-SR-GTH
                 POTENTIAL  GTH-PBE-q1
              &END
           &END
           &PRINT
              &FORCES ON
              &END
           &END
        &END


      # Optional, specify the template for the warmup stage, default: None
      # The content of the warmup stage template is the same as the main stage template.
      # The typical usage of warmup stage is to generate the initial wavefunction by applying a low-cost method.
      # And then the main stage can reference the wavefunction from the warmup stage to speed up the calculation.
      wfn_warmup_template: !load_text ./config/cp2k-warmup.inp