name: Check for version updates

on:
  schedule:
    - cron: '0 0 * * *'  # 每天运行
  workflow_dispatch:  # 允许手动触发
  pull_request:
    branches: [ main ]


jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check-version.outputs.version_changed }}
      new_version: ${{ steps.check-version.outputs.new_version }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: pip install requests
    - name: Check for version updates
      id: check-version
      run: python .github/scripts/check_version.py
    - name: Commit changes
      if: steps.check-version.outputs.version_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.txt
        git commit -m "Update version to ${{ steps.check-version.outputs.new_version }}"
        git push
  
  update-docs:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Fetch latest docs from GitLab
      env:
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        GITLAB_USER: ${{ secrets.GITLAB_USER }}
        GITLAB_REPO_URL: ${{ secrets.GITLAB_REPO_URL }}
      run: |
        git clone https://${GITLAB_USER}:${GITLAB_TOKEN}@${GITLAB_REPO_URL}.git
    
    - name: Install dependencies
      run: |
        pip install ./ai2-kit
        pip install jupyter-book

    - name: Update docs and notebooks
      run: |
        cp -r ai2-kit/docs/* ./
        cp -r ai2-kit/notebooks/* ./
    
    - name: Sphinx APIDoc
      run: |
        sphinx-apidoc -f -o _api/ ai2-kit/ai2_kit/ --separate

    # Build the book
    - name: Build the book
      run: |
        jupyter-book build .

    # Push the book's HTML to github-pages
    - name: GitHub Pages action
      if: github.event_name != 'pull_request'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ai2-kit/jupyter-book/_build/html
    
    # Commit the changes
    - name: Get author and committer info from HEAD commit
      uses: rlespinasse/git-commit-data-action@v1
      if: github.ref == 'refs/heads/main'

    - name: Commit changed files
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
      commit_message: "[skip ci] Update the book"
      if: github.ref == 'refs/heads/main'