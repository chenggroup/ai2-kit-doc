name: Build and Deploy Docs

on:
  repository_dispatch:
    types: [pypi-publish]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Ubuntu dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make pandoc

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Fetch latest docs from GitLab
      env:
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        GITLAB_USER: ${{ secrets.GITLAB_USER }}
        GITLAB_REPO_URL: ${{ secrets.GITLAB_REPO_URL }}
      run: |
        git clone https://${GITLAB_USER}:${GITLAB_TOKEN}@${GITLAB_REPO_URL}.git

    - name: Install dependencies
      run: |
        pip install ./ai2-kit
        pip install sphinx sphinx-apidoc myst_parser nbsphinx sphinxcontrib-bibtex pydata_sphinx_theme

    # doc and notebook: needs to be reviewed
    - name: Compare doc and notebook
      run: |
        diff -r ai2-kit/doc/ doc/
        diff -r ai2-kit/notebook/ notebook/
      output:
        diff: ${{ steps.compare-doc.outputs.diff }}

    - name: PR if doc or notebook changed
      if: steps.compare-doc.outputs.diff != ''
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Update doc and notebook
        title: Update doc and notebook
        body: |
          This PR updates the doc and notebook to the latest version.
        branch: update-doc-and-notebook
        base: main

    # API doc: update without PR
    - name: Sphinx APIDoc
      run: |
        sphinx-apidoc -f -o _api/ ai2-kit/ai2_kit/ --separate

    # Build the book
    - name: Build the book
      run: |
        make html

    # Push the book's HTML to github-pages
    - name: GitHub Pages action
      if: github.event_name != 'pull_request'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: _build/html